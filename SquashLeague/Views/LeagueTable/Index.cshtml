@model SquashLegaue.Models.LegaueTableResults
<h2>@ViewBag.Message</h2>

<div id="LeagueTableResults">
    <div id="Options">
        @using (Html.BeginForm()) {
            @Html.DisplayNameFor(model => model.SelectedResultTypeID)
            @Html.DropDownListFor( model => model.SelectedResultTypeID,  Model.LeagueResultTypes, string.Empty )<input type="submit" value="Refresh" />
        }
    </div>

    <div id="LeagueTable">
        <table>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Results[0].Name)
                </th>

                @if (ViewContext.HttpContext.GetOverriddenBrowser().IsMobileDevice)
                { 
                    <th>
                        M
                    </th>
                    <th>
                        W
                    </th>
                    <th>
                        D
                    </th>
                    <th>
                        L
                    </th>
                    <th>
                        GW
                    </th>
                    <th>
                        GL
                    </th>
                    <th>
                        GD
                    </th>
                    <th>
                        P
                    </th>
                    <th>
                        W%
                    </th>
                }
                else
                {
                    <th>
                        @Html.DisplayNameFor(model => model.Results[0].Matchs)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Results[0].Win)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Results[0].Draw)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Results[0].Lost)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Results[0].GamesWon)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Results[0].GamesLost)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Results[0].GamesDiff)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Results[0].Points)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Results[0].WinPercentage)
                    </th>
                }
            </tr>

            @foreach (var item in Model.Results)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.Score(item.Matchs, true)
                    </td>
                    <td>
                        @Html.Score(item.Win, true)
                    </td>
                    <td>
                        @Html.Score(item.Draw, true)
                    </td>
                    <td>
                        @Html.Score(item.Lost, true)
                    </td>
                    <td>
                        @Html.Score(item.GamesWon, true)
                    </td>
                    <td>
                        @Html.Score(item.GamesLost, true)
                    </td>
                    <td>
                        @Html.Score(item.GamesDiff, true)
                    </td>
                    <td>
                        @Html.Score(item.Points, true)
                    </td>
                    <td>
                        @Html.Score(item.WinPercentage, true)
                    </td>
                </tr>
            }
        </table>
    </div>
</div>
<div data-role="footer">
    @Html.ActionLink("Add game result", "AddResult", "LeagueTable")@Html.ActionLink("List Games", "ListGames", "LeagueTable")
</div>
   
